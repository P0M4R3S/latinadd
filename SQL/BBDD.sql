 CREATE TABLE IF NOT EXISTS usuarios (
id INT AUTO_INCREMENT PRIMARY KEY,
nombre VARCHAR(50) NOT NULL,
apellidos VARCHAR(100),
email VARCHAR(100) NOT NULL UNIQUE,
password VARCHAR(255) NOT NULL,
token VARCHAR(255),
nacimiento DATE,
ultima DATETIME DEFAULT CURRENT_TIMESTAMP,
pais VARCHAR(50),
ciudad VARCHAR(50),
descripcion TEXT,
foto VARCHAR(255) DEFAULT 'default.jpg',
primera BOOLEAN DEFAULT TRUE,
bot BOOLEAN DEFAULT FALSE,
amigos INT DEFAULT 0,
verificado BOOLEAN DEFAULT FALSE,
estado ENUM('activo', 'suspendido', 'eliminado') DEFAULT 'activo'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS reportesusuario (
id INT AUTO_INCREMENT PRIMARY KEY,
reportador INT NOT NULL,
reportado INT NOT NULL,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
motivo VARCHAR(255),
texto TEXT,
estado ENUM('pendiente', 'resuelto', 'rechazado') DEFAULT 'pendiente'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS amigos (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario1 INT NOT NULL,
usuario2 INT NOT NULL,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS peticionesamistad (
id INT AUTO_INCREMENT PRIMARY KEY,
solicitante INT NOT NULL,
solicitado INT NOT NULL,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS mensajesdirectos (
id INT AUTO_INCREMENT PRIMARY KEY,
emisor INT NOT NULL,
receptor INT NOT NULL,
mensaje TEXT NOT NULL,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
leido BOOLEAN DEFAULT FALSE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS notificaciones (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario INT NOT NULL,
tipo VARCHAR(50),
mensaje TEXT,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
leido BOOLEAN DEFAULT FALSE,
post INT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS bloqueosusuarios (
id INT AUTO_INCREMENT PRIMARY KEY,
bloqueador INT NOT NULL,
bloqueado INT NOT NULL,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS imagenes (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario INT NOT NULL,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
tipo ENUM('post', 'tienda'),
ruta VARCHAR(255) NOT NULL,
post_id int default NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS paginas (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario INT NOT NULL,
nombre VARCHAR(100) NOT NULL,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
tema VARCHAR(100),
imagen VARCHAR(255) DEFAULT 'default.jpg',
descripcion TEXT,
seguidores INT DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS reportespagina (
id INT AUTO_INCREMENT PRIMARY KEY,
reportador INT NOT NULL,
pagina INT NOT NULL,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
motivo VARCHAR(255),
texto TEXT,
estado ENUM('pendiente', 'resuelto', 'rechazado') DEFAULT 'pendiente'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS likespagina (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario INT NOT NULL,
pagina INT NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS posts (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario INT NOT NULL,
texto TEXT,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
likes INT DEFAULT 0,
comentarios INT DEFAULT 0,
tipo TINYINT DEFAULT 1,
idcompartido INT DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS likespost (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario INT NOT NULL,
post INT NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS comentariospost (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario INT NOT NULL,
post INT NOT NULL,
texto TEXT,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
idrespuesta INT DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS reportescomentarios (
id INT AUTO_INCREMENT PRIMARY KEY,
reportador INT NOT NULL,
comentario INT NOT NULL,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
motivo VARCHAR(255),
texto TEXT,
estado ENUM('pendiente', 'resuelto', 'rechazado') DEFAULT 'pendiente'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS productos (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario INT NOT NULL,
nombre VARCHAR(100),
descripcion TEXT,
precio DECIMAL(10,2),
fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
vendido BOOLEAN DEFAULT FALSE,
latitud DECIMAL(9,6),
longitud DECIMAL(9,6),
estado TINYINT DEFAULT 0,
categoria VARCHAR(100)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS reportesproducto (
id INT AUTO_INCREMENT PRIMARY KEY,
reportador INT NOT NULL,
producto INT NOT NULL,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
motivo VARCHAR(255),
texto TEXT,
estado ENUM('pendiente', 'resuelto', 'rechazado') DEFAULT 'pendiente'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS conversaciones (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario1 INT NOT NULL,
usuario2 INT NOT NULL,
eliminado1 BOOLEAN DEFAULT FALSE,
eliminado2 BOOLEAN DEFAULT FALSE,
producto INT NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS mensajestienda (
id INT AUTO_INCREMENT PRIMARY KEY,
usuario INT NOT NULL,
conversacion INT NOT NULL,
texto TEXT,
fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
leido BOOLEAN DEFAULT FALSE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS palabrasclave (
    id INT AUTO_INCREMENT PRIMARY KEY,
    palabra VARCHAR(50) UNIQUE NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS interesusuario (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario INT NOT NULL,
    palabra_id INT NOT NULL,
    puntuacion INT DEFAULT 1,
    ultima_interaccion DATETIME DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(usuario, palabra_id),
    FOREIGN KEY (usuario) REFERENCES usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (palabra_id) REFERENCES palabrasclave(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS palabraspagina (
    pagina_id INT NOT NULL,
    palabra_id INT NOT NULL,
    PRIMARY KEY (pagina_id, palabra_id),
    FOREIGN KEY (pagina_id) REFERENCES paginas(id) ON DELETE CASCADE,
    FOREIGN KEY (palabra_id) REFERENCES palabrasclave(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS reportesconversacion (
    id INT AUTO_INCREMENT PRIMARY KEY,
    idreportador INT NOT NULL,
    idconversacion INT NOT NULL,
    motivo VARCHAR(255),
    texto TEXT,
    fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
    estado ENUM('pendiente', 'resuelto', 'rechazado') DEFAULT 'pendiente'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS reportespost (
    id INT AUTO_INCREMENT PRIMARY KEY,
    reportador INT NOT NULL,
    post INT NOT NULL,
    motivo VARCHAR(255),
    texto TEXT,
    fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
    estado ENUM('pendiente', 'resuelto', 'rechazado') DEFAULT 'pendiente'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS likescomentarios  (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario INT NOT NULL,
    comentario INT NOT NULL,
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (usuario, comentario)
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS seguidorespagina (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario INT NOT NULL,
    pagina INT NOT NULL,
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY unique_usuario_pagina (usuario, pagina),
    FOREIGN KEY (usuario) REFERENCES usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (pagina) REFERENCES paginas(id) ON DELETE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

